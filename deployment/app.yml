apiVersion: apps/v1
kind: StatefulSet
metadata:
  labels:
    service: atamagaii-api
  name: atamagaii-api
  namespace: default
spec:
  serviceName: "atamagaii-api"
  replicas: 1
  selector:
    matchLabels:
      service: atamagaii-api
  updateStrategy:
    type: RollingUpdate
    rollingUpdate:
      partition: 0
  template:
    metadata:
      labels:
        service: atamagaii-api
    spec:
      containers:
        - image: maksim1111/atamagaii-api:latest
          name: atamagaii-api
          imagePullPolicy: IfNotPresent
          command: [ "/app/main" ]
          ports:
            - containerPort: 8080
              name: http
              protocol: TCP
          resources:
            requests:
              memory: "128Mi"
              cpu: "50m"
            limits:
              memory: "512Mi"
          volumeMounts:
            - mountPath: /app/storage
              subPath: storage
              name: atamagaii-api-data
            - mountPath: /app/config.yml
              name: atamagaii-api-config
              subPath: config.yml
            - mountPath: /app/google-credentials.json
              name: atamagaii-api-config
              subPath: google-credentials.json
          env:
            - name: CONFIG_FILE_PATH
              value: /app/config.yml
            - name: GOOGLE_APPLICATION_CREDENTIALS
              value: /app/google-credentials.json
          readinessProbe:
            exec:
              command: [ "sqlite3", "/app/storage/db.sqlite", ".tables" ]
            initialDelaySeconds: 0
            periodSeconds: 5
            timeoutSeconds: 2
      volumes:
        - name: atamagaii-api-config
          secret:
            secretName: atamagaii-api-secrets
  volumeClaimTemplates:
    - metadata:
        name: atamagaii-api-data
      spec:
        accessModes: [ "ReadWriteOnce" ]
        resources:
          requests:
            storage: 1Gi
        storageClassName: "do-block-storage"

---
apiVersion: v1
kind: Service
metadata:
  labels:
    service: atamagaii-api
  name: atamagaii-api
  namespace: default
spec:
  type: ClusterIP
  ports:
    - port: 8080
      targetPort: 8080
  selector:
    service: atamagaii-api
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: atamagaii-api
  namespace: default
  annotations:
    nginx.ingress.kubernetes.io/proxy-body-size: "200m"
spec:
  ingressClassName: nginx
  rules:
    - host: atamagaii-api.mxksimdev.com
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: atamagaii-api
                port:
                  number: 8080